@use "../configs" as *;
@use "../functions" as *;
@use "../mixins" as *;

@if $vu-enable-container-classes {
    .#{$vu-variable-prefix}container,
    .#{$vu-variable-prefix}container-fluid {
        @include vu-make-container();
        box-sizing: border-box;
    }

    @if $vu-enable-responsive-container-classes {
        .#{$vu-variable-prefix}container {
            max-width: map-get($vu-container-max-widths, vu-map-get-key($vu-grid-breakpoints, last));
        }
        
        @each $breakpoint, $container-max-width in $vu-container-max-widths {
            $infix: vu-breakpoint-infix($breakpoint, $vu-grid-breakpoints);

            .#{$infix}#{$vu-variable-prefix}container {
                @extend .#{$vu-variable-prefix}container-fluid;
            }

            @include vu-media-breakpoint-up($breakpoint) {
                %responsive-container-#{$breakpoint} {
                    max-width: $container-max-width;
                }

                $extend-breakpoint: true;

                @each $name, $width in $vu-grid-breakpoints {
                    @if ($extend-breakpoint) {
                        $infix: vu-breakpoint-infix($name, $vu-grid-breakpoints);

                        @if ($infix != '') {
                            .#{$infix}#{$vu-variable-prefix}container {
                                @extend %responsive-container-#{$breakpoint};
                            }
                        }

                        // Once the current breakpoint is reached, stop extending
                        @if ($breakpoint == $name) {
                            $extend-breakpoint: false;
                        }
                    }
                }

                .#{$vu-variable-prefix}container,
                .#{$vu-variable-prefix}container-fluid {
                    --vu-container-padding-x: #{map-get($vu-container-padding-x, $breakpoint)};
                }
            }
        }
    }
    @else {
        .#{$vu-variable-prefix}container {
            max-width: map-get($vu-container-max-widths, vu-map-get-key($vu-grid-breakpoints, last));
        }

        @each $breakpoint in map-keys($vu-grid-breakpoints) {
            @include vu-media-breakpoint-only($breakpoint) {
                .#{$vu-variable-prefix}container,
                .#{$vu-variable-prefix}container-fluid {
                    --vu-container-padding-x: #{map-get($vu-container-padding-x, $breakpoint)};
                }
            }
        }
    }
}